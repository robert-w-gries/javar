/* Generated By:JavaCC: Do not edit this line. ReadFragsConstants.java */
package Parse;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ReadFragsConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int DOT = 6;
  /** RegularExpression Id. */
  int LPAREN = 7;
  /** RegularExpression Id. */
  int RPAREN = 8;
  /** RegularExpression Id. */
  int LANGLE = 9;
  /** RegularExpression Id. */
  int RANGLE = 10;
  /** RegularExpression Id. */
  int COMMA = 11;
  /** RegularExpression Id. */
  int COLON = 12;
  /** RegularExpression Id. */
  int DQUOTE = 13;
  /** RegularExpression Id. */
  int ALIGN = 14;
  /** RegularExpression Id. */
  int ASCIZ = 15;
  /** RegularExpression Id. */
  int DATA = 16;
  /** RegularExpression Id. */
  int WORD = 17;
  /** RegularExpression Id. */
  int DATAFRAG = 18;
  /** RegularExpression Id. */
  int PROCFRAG = 19;
  /** RegularExpression Id. */
  int MIPSFRAME = 20;
  /** RegularExpression Id. */
  int ACTUALS = 21;
  /** RegularExpression Id. */
  int FORMALS = 22;
  /** RegularExpression Id. */
  int BADPTR = 23;
  /** RegularExpression Id. */
  int BADSUB = 24;
  /** RegularExpression Id. */
  int INREG = 25;
  /** RegularExpression Id. */
  int INFRAME = 26;
  /** RegularExpression Id. */
  int BINOP = 27;
  /** RegularExpression Id. */
  int MEM = 28;
  /** RegularExpression Id. */
  int TEMP = 29;
  /** RegularExpression Id. */
  int CALL = 30;
  /** RegularExpression Id. */
  int CONST = 31;
  /** RegularExpression Id. */
  int EXP = 32;
  /** RegularExpression Id. */
  int JUMP = 33;
  /** RegularExpression Id. */
  int MOVE = 34;
  /** RegularExpression Id. */
  int SEQ = 35;
  /** RegularExpression Id. */
  int CJUMP = 36;
  /** RegularExpression Id. */
  int ESEQ = 37;
  /** RegularExpression Id. */
  int LABEL = 38;
  /** RegularExpression Id. */
  int NAME = 39;
  /** RegularExpression Id. */
  int EQ = 40;
  /** RegularExpression Id. */
  int NE = 41;
  /** RegularExpression Id. */
  int LT = 42;
  /** RegularExpression Id. */
  int GT = 43;
  /** RegularExpression Id. */
  int LE = 44;
  /** RegularExpression Id. */
  int GE = 45;
  /** RegularExpression Id. */
  int ULT = 46;
  /** RegularExpression Id. */
  int ULE = 47;
  /** RegularExpression Id. */
  int UGT = 48;
  /** RegularExpression Id. */
  int UGE = 49;
  /** RegularExpression Id. */
  int PLUS = 50;
  /** RegularExpression Id. */
  int MINUS = 51;
  /** RegularExpression Id. */
  int MUL = 52;
  /** RegularExpression Id. */
  int DIV = 53;
  /** RegularExpression Id. */
  int AND = 54;
  /** RegularExpression Id. */
  int OR = 55;
  /** RegularExpression Id. */
  int SLL = 56;
  /** RegularExpression Id. */
  int SRL = 57;
  /** RegularExpression Id. */
  int SRA = 58;
  /** RegularExpression Id. */
  int BITAND = 59;
  /** RegularExpression Id. */
  int BITOR = 60;
  /** RegularExpression Id. */
  int BITXOR = 61;
  /** RegularExpression Id. */
  int NUM = 62;
  /** RegularExpression Id. */
  int ID = 63;
  /** RegularExpression Id. */
  int STRINGVAL = 64;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\".\"",
    "\"(\"",
    "\")\"",
    "\"<\"",
    "\">\"",
    "\",\"",
    "\":\"",
    "\"\\\"\"",
    "\"align\"",
    "\"asciiz\"",
    "\"data\"",
    "\"word\"",
    "\"DataFrag\"",
    "\"ProcFrag\"",
    "\"MipsFrame\"",
    "\"Actuals\"",
    "\"Formals\"",
    "\"BadPtr\"",
    "\"BadSub\"",
    "\"InReg\"",
    "\"InFrame\"",
    "\"BINOP\"",
    "\"MEM\"",
    "\"TEMP\"",
    "\"CALL\"",
    "\"CONST\"",
    "\"EXP\"",
    "\"JUMP\"",
    "\"MOVE\"",
    "\"SEQ\"",
    "\"CJUMP\"",
    "\"ESEQ\"",
    "\"LABEL\"",
    "\"NAME\"",
    "\"EQ\"",
    "\"NE\"",
    "\"LT\"",
    "\"GT\"",
    "\"LE\"",
    "\"GE\"",
    "\"ULT\"",
    "\"ULE\"",
    "\"UGT\"",
    "\"UGE\"",
    "\"PLUS\"",
    "\"MINUS\"",
    "\"MUL\"",
    "\"DIV\"",
    "\"AND\"",
    "\"OR\"",
    "\"SLL\"",
    "\"SRL\"",
    "\"SRA\"",
    "\"BITAND\"",
    "\"BITOR\"",
    "\"BITXOR\"",
    "<NUM>",
    "<ID>",
    "<STRINGVAL>",
  };

}
